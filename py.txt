# -> tek line comment için

""" 
arasına yazılanlar uzun commentler için
"""
===========================================================
round -> 2 argüman (biri opsiyonel) sayı, basamak / yuvarlamak için kullanılır

print(round(10.12345, 1)) -> 10.1 çıktısı verir
===========================================================

a = "test"
len(a) -> 4

==========================================================





===========================================================
print(f" test = {ilk}") -> f'in sebebi {} içindeki değişkeninin özel olduğunu belirtmek ve + ya da , olmadan yazdırmak

degisken.title() -> baş harflerini büyük yazar
degisken.split() -> parantez içindekine göre ayırır
degisken.strip() -> başındaki ve sonundaki boşlukları siler

print içerisinde özel bir karakter yazılması gerekirse öncesine \ konur
print("test\"") -> test" çıktısı verir

print içerisinde birden uzun satırlı bir şey yazmak için 2 yol var

1) print("""a
b
c """)   

şeklinde yazabilirsiniz

2) print ("a \n b \n c ") 

şekilde yazabilirsiniz

========================================================

print fonksiyonunun parametreleri bulunur (end ve sep)
pythondaki print fonksiyonunun sonunda default olarak \n bulunur (yani otomatik alt satıra iner)
bunu engellemek için "end" parametresi boşluk olarak ayarlanabilir

Örnek vermek gerekiyose

print("test1")
print("test2") 

şeklinde yazılmış bir programın çıktısı

test1
test2 

şeklinde olacaktır

ancak 

print("test1", end=" ")
print("test2") 

şelinde yazılmış bir programın çıktısı

test1 test2 

şeklinde olacaktır


diğer bir parametresi olan "sep" ise argümanların arasına ne koyulacağını ayarlamaya yarıyor

print("a","b","c","d", sep="+")

şeklinde yazılan bir programın çıktısı

a+b+c+d şeklinde olacaktır.


sep ve end parametrelerine integer değerler verilemez 

print("a","b", sep=3) veya print("a","b", end=1) şeklindeki programlar hata verecektir
====================================================


Liste [] ile açılıyor

test = ["veri","ler"] // 2 elemanlı bir liste